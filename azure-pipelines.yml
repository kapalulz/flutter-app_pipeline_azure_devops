trigger:
- main

stages:

- stage: AndroidStage
  pool:
    name: Default
  dependsOn: []
  displayName: Android
  jobs:
 

  - job: APK
    displayName: Android
    steps:

    - task: FlutterInstall@0
      displayName: "Install Flutter SDK"
      inputs:
        mode: 'auto'
        channel: 'stable'
        version: 'latest'
     
    - task: FlutterCommand@0
      displayName: "Run Flutter diagnostics"
      inputs:
        projectDirectory: '.'
        arguments: 'doctor -v'

    - task: FlutterBuild@0
      displayName: 'Flutter Build apk'
      inputs:
        target: apk
        projectDirectory: '$(Build.SourcesDirectory)'
        debugMode: false

    - task: FlutterTest@0
      displayName: "Run unit tests"
      inputs:
        generateCodeCoverageReport: true
        projectDirectory: '$(Build.SourcesDirectory)'

    - task: AndroidSigning@3
      displayName: 'Signing and aligning APK file(s) **/*.apk'
      inputs:
        apkFiles: '**/*.apk'
        apksign: false       

    - task: CopyFiles@2
      inputs:
        contents: '**/*.apk'
        targetFolder: '$(build.artifactStagingDirectory)'
       
    - task: PublishBuildArtifacts@1
      displayName: "Publish AAB file"
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'AAB'
        publishLocation: 'Container'

- stage: winStage
  pool: 
    vmImage: 'windows-latest'
  dependsOn: []
  displayName: Windows
  jobs:
 
  - job: windowsJob
    displayName: Windows
    steps: 
        
    - task: FlutterInstall@0
      displayName: "Install Flutter SDK"
      inputs:
        mode: 'auto'
        channel: 'stable'
        version: 'latest'
    
    - task: FlutterCommand@0
      displayName: "Run Flutter diagnostics"
      inputs:
        projectDirectory: '.'
        arguments: 'doctor -v'

    - task: FlutterBuild@0
      displayName: "Build application"
      inputs:
        target: windows
        projectDirectory: '$(Build.SourcesDirectory)'

    - task: FlutterTest@0
      displayName: "Run unit tests"
      inputs:
        generateCodeCoverageReport: true
        projectDirectory: '$(Build.SourcesDirectory)'

    # install package msix -> https://pub.dev/packages/msix
    # provide signing information in pubspec.yaml -> see https://github.com/YehudaKremer/msix/tree/main/example#without-signing
    - task: FlutterCommand@0
      displayName: "Create MSIX file"
      inputs:
        projectDirectory: '$(Build.SourcesDirectory)'
        arguments: 'pub run msix:create --build-windows false'

    - task: CopyFiles@2
      displayName: "Copy app to staging directory"
      inputs:
        sourceFolder: '$(Agent.BuildDirectory)'
        contents: '**/*.msix'
        targetFolder: '$(Build.StagingDirectory)'
        flattenFolders: true

    - task: PublishBuildArtifacts@1
      displayName: "Publish MSIX"
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'Windows'
        publishLocation: 'Container'