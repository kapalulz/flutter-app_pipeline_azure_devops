trigger:
- main

stages:

- stage: AndroidStage
  pool:
    name: Default
  dependsOn: []
  displayName: Android
  jobs:
 

  - job: APK
    displayName: Android
    steps:

    - task: FlutterInstall@0
      displayName: "Install Flutter SDK"
      inputs:
        mode: 'auto'
        channel: 'stable'
        version: 'latest'
     
    - task: FlutterCommand@0
      displayName: "Run Flutter diagnostics"
      inputs:
        projectDirectory: '.'
        arguments: 'doctor -v'

    - task: FlutterBuild@0
      displayName: 'Flutter Build apk'
      inputs:
        target: apk
        projectDirectory: '$(Build.SourcesDirectory)'
        debugMode: false

    - task: FlutterTest@0
      displayName: "Run unit tests"
      inputs:
        generateCodeCoverageReport: true
        projectDirectory: '$(Build.SourcesDirectory)'

    - task: AndroidSigning@3
      displayName: 'Signing and aligning APK file(s) **/*.apk'
      inputs:
        apkFiles: '**/*.apk'
        apksign: false       

    - task: CopyFiles@2
      inputs:
        contents: '**/*.apk'
        targetFolder: '$(build.artifactStagingDirectory)'
       
    - task: PublishBuildArtifacts@1
      displayName: "Publish AAB file"
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'AAB'
        publishLocation: 'Container'
      
    - task: AppCenterDistribute@3
      inputs:
        serverEndpoint: 'AppCenter'
        appSlug: 'kapalulz/myapp'
        appFile: 'build/app/outputs/flutter-apk/app.apk'
        symbolsOption: 'Android'
        releaseNotesOption: 'input'
        releaseNotesInput: 'test'
        destinationType: 'groups'
        distributionGroupId: 'da3b6c69-fb4d-437d-a313-57a410dbe743'
        
  - job: iOSJob
    displayName: iOS
    steps: 
                 
    - task: FlutterInstall@0
      displayName: "Install Flutter SDK"
      inputs:
        mode: 'auto'
        channel: 'stable'
        version: 'latest'

    - task: FlutterCommand@0
      displayName: "Run Flutter diagnostics"
      inputs:
        projectDirectory: '.'
        arguments: 'doctor -v'

    # adjust path to the *.plist file
    - task: FlutterBuild@0
      displayName: "Build application"
      inputs:
        target: ipa
        projectDirectory: '$(Build.SourcesDirectory)'
        exportOptionsPlist: 'ios/AppFrameworkInfo.plist'

    - task: FlutterTest@0
      displayName: "Run unit tests"
      inputs:
        generateCodeCoverageReport: true
        projectDirectory: '$(Build.SourcesDirectory)'

    - task: CopyFiles@2
      displayName: "Copy app to staging directory"
      inputs:
        sourceFolder: '$(Agent.BuildDirectory)'
        contents: '**/ipa/*.ipa'
        targetFolder: '$(Build.StagingDirectory)'
        flattenFolders: true

    - task: PublishBuildArtifacts@1
      displayName: "Publish IPA file"
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'IPA'
        publishLocation: 'Container'